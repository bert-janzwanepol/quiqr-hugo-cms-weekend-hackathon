/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ProjectsIndexImport } from './routes/projects/index'
import { Route as ProjectsCreateImport } from './routes/projects/create'
import { Route as ProjectsLayoutImport } from './routes/projects/_layout'
import { Route as ProjectsProjectIdIndexImport } from './routes/projects/$projectId/index'
import { Route as ProjectsProjectIdMenuSectionIndexImport } from './routes/projects/$projectId/$menuSection/index'
import { Route as ProjectsProjectIdMenuSectionMenuItemImport } from './routes/projects/$projectId/$menuSection/$menuItem'

// Create Virtual Routes

const ProjectsImport = createFileRoute('/projects')()

// Create/Update Routes

const ProjectsRoute = ProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProjectsIndexRoute = ProjectsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProjectsRoute,
} as any)

const ProjectsCreateRoute = ProjectsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => ProjectsRoute,
} as any)

const ProjectsLayoutRoute = ProjectsLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ProjectsRoute,
} as any)

const ProjectsProjectIdIndexRoute = ProjectsProjectIdIndexImport.update({
  id: '/$projectId/',
  path: '/$projectId/',
  getParentRoute: () => ProjectsRoute,
} as any)

const ProjectsProjectIdMenuSectionIndexRoute =
  ProjectsProjectIdMenuSectionIndexImport.update({
    id: '/$projectId/$menuSection/',
    path: '/$projectId/$menuSection/',
    getParentRoute: () => ProjectsRoute,
  } as any)

const ProjectsProjectIdMenuSectionMenuItemRoute =
  ProjectsProjectIdMenuSectionMenuItemImport.update({
    id: '/$projectId/$menuSection/$menuItem',
    path: '/$projectId/$menuSection/$menuItem',
    getParentRoute: () => ProjectsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsImport
      parentRoute: typeof rootRoute
    }
    '/projects/_layout': {
      id: '/projects/_layout'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsLayoutImport
      parentRoute: typeof ProjectsRoute
    }
    '/projects/create': {
      id: '/projects/create'
      path: '/create'
      fullPath: '/projects/create'
      preLoaderRoute: typeof ProjectsCreateImport
      parentRoute: typeof ProjectsImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/'
      fullPath: '/projects/'
      preLoaderRoute: typeof ProjectsIndexImport
      parentRoute: typeof ProjectsImport
    }
    '/projects/$projectId/': {
      id: '/projects/$projectId/'
      path: '/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdIndexImport
      parentRoute: typeof ProjectsImport
    }
    '/projects/$projectId/$menuSection/$menuItem': {
      id: '/projects/$projectId/$menuSection/$menuItem'
      path: '/$projectId/$menuSection/$menuItem'
      fullPath: '/projects/$projectId/$menuSection/$menuItem'
      preLoaderRoute: typeof ProjectsProjectIdMenuSectionMenuItemImport
      parentRoute: typeof ProjectsImport
    }
    '/projects/$projectId/$menuSection/': {
      id: '/projects/$projectId/$menuSection/'
      path: '/$projectId/$menuSection'
      fullPath: '/projects/$projectId/$menuSection'
      preLoaderRoute: typeof ProjectsProjectIdMenuSectionIndexImport
      parentRoute: typeof ProjectsImport
    }
  }
}

// Create and export the route tree

interface ProjectsRouteChildren {
  ProjectsLayoutRoute: typeof ProjectsLayoutRoute
  ProjectsCreateRoute: typeof ProjectsCreateRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjectsProjectIdIndexRoute: typeof ProjectsProjectIdIndexRoute
  ProjectsProjectIdMenuSectionMenuItemRoute: typeof ProjectsProjectIdMenuSectionMenuItemRoute
  ProjectsProjectIdMenuSectionIndexRoute: typeof ProjectsProjectIdMenuSectionIndexRoute
}

const ProjectsRouteChildren: ProjectsRouteChildren = {
  ProjectsLayoutRoute: ProjectsLayoutRoute,
  ProjectsCreateRoute: ProjectsCreateRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjectsProjectIdIndexRoute: ProjectsProjectIdIndexRoute,
  ProjectsProjectIdMenuSectionMenuItemRoute:
    ProjectsProjectIdMenuSectionMenuItemRoute,
  ProjectsProjectIdMenuSectionIndexRoute:
    ProjectsProjectIdMenuSectionIndexRoute,
}

const ProjectsRouteWithChildren = ProjectsRoute._addFileChildren(
  ProjectsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsLayoutRoute
  '/projects/create': typeof ProjectsCreateRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/$menuSection/$menuItem': typeof ProjectsProjectIdMenuSectionMenuItemRoute
  '/projects/$projectId/$menuSection': typeof ProjectsProjectIdMenuSectionIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/create': typeof ProjectsCreateRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/$menuSection/$menuItem': typeof ProjectsProjectIdMenuSectionMenuItemRoute
  '/projects/$projectId/$menuSection': typeof ProjectsProjectIdMenuSectionIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/projects': typeof ProjectsRouteWithChildren
  '/projects/_layout': typeof ProjectsLayoutRoute
  '/projects/create': typeof ProjectsCreateRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$projectId/': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/$menuSection/$menuItem': typeof ProjectsProjectIdMenuSectionMenuItemRoute
  '/projects/$projectId/$menuSection/': typeof ProjectsProjectIdMenuSectionIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/projects'
    | '/projects/create'
    | '/projects/'
    | '/projects/$projectId'
    | '/projects/$projectId/$menuSection/$menuItem'
    | '/projects/$projectId/$menuSection'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/projects'
    | '/projects/create'
    | '/projects/$projectId'
    | '/projects/$projectId/$menuSection/$menuItem'
    | '/projects/$projectId/$menuSection'
  id:
    | '__root__'
    | '/'
    | '/projects'
    | '/projects/_layout'
    | '/projects/create'
    | '/projects/'
    | '/projects/$projectId/'
    | '/projects/$projectId/$menuSection/$menuItem'
    | '/projects/$projectId/$menuSection/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectsRoute: typeof ProjectsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectsRoute: ProjectsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/projects"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/projects": {
      "filePath": "projects",
      "children": [
        "/projects/_layout",
        "/projects/create",
        "/projects/",
        "/projects/$projectId/",
        "/projects/$projectId/$menuSection/$menuItem",
        "/projects/$projectId/$menuSection/"
      ]
    },
    "/projects/_layout": {
      "filePath": "projects/_layout.tsx",
      "parent": "/projects"
    },
    "/projects/create": {
      "filePath": "projects/create.tsx",
      "parent": "/projects"
    },
    "/projects/": {
      "filePath": "projects/index.tsx",
      "parent": "/projects"
    },
    "/projects/$projectId/": {
      "filePath": "projects/$projectId/index.tsx",
      "parent": "/projects"
    },
    "/projects/$projectId/$menuSection/$menuItem": {
      "filePath": "projects/$projectId/$menuSection/$menuItem.tsx",
      "parent": "/projects"
    },
    "/projects/$projectId/$menuSection/": {
      "filePath": "projects/$projectId/$menuSection/index.tsx",
      "parent": "/projects"
    }
  }
}
ROUTE_MANIFEST_END */
